/*******************************************************************************
 * Copyright (c) 2019 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.eclipse.xtend.ide.tests.quickfix

import org.eclipse.xtend.ide.tests.XtendIDEInjectorProvider
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.ui.testing.AbstractQuickfixTest
import org.junit.Before
import org.junit.Test
import org.junit.runner.RunWith

import static org.eclipse.xtend.core.validation.IssueCodes.MODIFIER_DOES_NOT_MATCH_TYPENAME

import static extension org.eclipse.xtext.ui.testing.util.JavaProjectSetupUtil.createJavaProject

/**
<<<<<<< HEAD
 * @author Eva Poell - Initial contribution
=======
<<<<<<< HEAD
 * @author Eva Poell - Initial contribution
=======
 * @author Eva Poell - Initial contribution and
>>>>>>> 8492405ed... [#724] Fixed minor comments
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
 */
@RunWith(XtextRunner)
@InjectWith(XtendIDEInjectorProvider)
class ValidationIssue719QuickFixTest extends AbstractQuickfixTest {

	@Before
	def void setup() {
		// Xbase-based languages require java project
		projectName.createJavaProject
	}

<<<<<<< HEAD
<<<<<<< HEAD
	@Test
=======
	@Test
<<<<<<< HEAD
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
	def void add_abstract_simple() {
		'''
			class AbstractSample {
			}
<<<<<<< HEAD
		'''.applyFix('''
=======
		'''.internTestQuickFix('''
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			abstract class AbstractSample {
			}
		''')
	}

	@Test
	def void add_abstract_final_simple() {
		'''
			final class AbstractSample {
			}
<<<<<<< HEAD
		'''.applyFix('''
=======
		'''.internTestQuickFix('''
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			abstract class AbstractSample {
			}
		''')
	}

	@Test
	def void add_abstract_package() {
		'''
			package class AbstractSample {
			}
<<<<<<< HEAD
		'''.applyFix('''
			package abstract class AbstractSample {
=======
	@Test
	def void add_abstract_simple() {
		'''
			class AbstractSample {
			}
		'''.internTestQuickFix('''
			abstract class AbstractSample {
>>>>>>> a86f7f1ea... [#724] Fixed nested classes bug
=======
		'''.internTestQuickFix('''
			package abstract class AbstractSample {
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			}
		''')
	}

	@Test
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
	def void add_abstract_package_final() {
		'''
			package final class AbstractSample {
			}
<<<<<<< HEAD
		'''.applyFix('''
=======
		'''.internTestQuickFix('''
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			package abstract class AbstractSample {
			}
		''')
	}

	@Test
	def void add_abstract_static() {
		'''
			static class AbstractSample {
			}
<<<<<<< HEAD
		'''.applyFix('''
=======
		'''.internTestQuickFix('''
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			abstract static class AbstractSample {
			}
		''')
	}

	@Test
	def void add_abstract_nested_classes_outer() {
		'''
			class AbstractX{
				abstract static class AbstractY{
				}
			}
<<<<<<< HEAD
		'''.applyFix('''
			abstract class AbstractX{
				abstract static class AbstractY{
				}
=======
	def void add_abstract_final_simple() {
		'''
			final class AbstractSample {
			}
		'''.internTestQuickFix('''
			abstract class AbstractSample {
>>>>>>> a86f7f1ea... [#724] Fixed nested classes bug
			}
		''')
	}

	@Test
<<<<<<< HEAD
=======
		'''.testQuickfixesOn(MODIFIER_DOES_NOT_MATCH_TYPENAME,
			new Quickfix("Add missing abstract modifier.",
				"Add the abstract modifier to match naming conventions for the type name. Delete final modifier if necessary.", '''
					abstract class AbstractX{
						abstract static class AbstractY{
						}
					}
				'''))
	}

	@Test
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
	def void add_abstract_nested_classes_inner() {
		'''
			abstract class AbstractX{
				class AbstractY{
				}
			}
<<<<<<< HEAD
		'''.applyFix('''
=======
		'''.internTestQuickFix('''
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			abstract class AbstractX{
				abstract class AbstractY{
				}
			}
		''')
	}
<<<<<<< HEAD

=======
	
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
	@Test
	def void add_abstract_nested_classes_outer_static() {
		'''
			static class AbstractX{
				class SampleInner{
				}
			}
<<<<<<< HEAD
		'''.applyFix('''
			abstract static class AbstractX{
				class SampleInner{
				}
=======
	def void add_abstract_package() {
		'''
			package class AbstractSample {
			}
		'''.internTestQuickFix('''
			package abstract class AbstractSample {
>>>>>>> a86f7f1ea... [#724] Fixed nested classes bug
=======
		'''.internTestQuickFix('''
			abstract static class AbstractX{
				class SampleInner{
				}
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
			}
		''')
	}

<<<<<<< HEAD
	@Test
<<<<<<< HEAD
	def void add_abstract_annotation() {
		'''
			@Depreciated
			class AbstractX{
			}
		'''.applyFix('''
			@Depreciated
			abstract class AbstractX{
			}
=======
	def void add_abstract_package_final() {
		'''
			package final class AbstractSample {
			}
		'''.internTestQuickFix('''
			package abstract class AbstractSample {
			}
>>>>>>> a86f7f1ea... [#724] Fixed nested classes bug
		''')
	}

	@Test
<<<<<<< HEAD
	def void add_abstract_javadoc() {
		'''
			/**
			 * This is a doc for this abstract class.
			 * It even has two lines.
			 */
			class AbstractX{
			}
		'''.applyFix('''
			/**
			 * This is a doc for this abstract class.
			 * It even has two lines.
			 */
			abstract class AbstractX{
			}
		''')
	}

	def private applyFix(CharSequence input, CharSequence result) {
=======
	def void add_abstract_static() {
		'''
			static class AbstractSample {
			}
		'''.internTestQuickFix('''
			abstract static class AbstractSample {
			}
		''')
	}

	@Test
	def void add_abstract_nested_classes_outer() {
		'''
			class AbstractX{
				abstract static class AbstractY{
				}
			}
		'''.testQuickfixesOn(MODIFIER_DOES_NOT_MATCH_TYPENAME,
			new Quickfix("Add missing abstract modifier.",
				"Add the abstract modifier to match naming conventions for the type name. Delete final modifier if necessary.", '''
					abstract class AbstractX{
						abstract static class AbstractY{
						}
					}
				'''))
	}

	@Test
	def void add_abstract_nested_classes_inner() {
		'''
			abstract class AbstractX{
				class AbstractY{
				}
			}
		'''.internTestQuickFix('''
			abstract class AbstractX{
				abstract class AbstractY{
				}
			}
		''')
	}
	
	@Test
	def void add_abstract_nested_classes_outer_static() {
		'''
			static class AbstractX{
				class SampleInner{
				}
			}
		'''.internTestQuickFix('''
			abstract static class AbstractX{
				class SampleInner{
				}
			}
		''')
	}

	def private internTestQuickFix(CharSequence input, CharSequence result) {
>>>>>>> a86f7f1ea... [#724] Fixed nested classes bug
=======
	def private internTestQuickFix(CharSequence input, CharSequence result) {
=======
	def add_abstract_simple() {
		'''
			class AbstractSample {
			}
		'''.internTestQuickFix(true)
	}

	@Test
	def add_abstract_final_simple() {
		'''
			final class AbstractSample {
			}
		'''.internTestQuickFix(true)
	}

	@Test
	def add_abstract_package() {
		'''
			package class AbstractSample {
			}
		'''.internTestQuickFix(false)
	}

	@Test
	def add_abstract_package_final() {
		'''
			package final class AbstractSample {
			}
		'''.internTestQuickFix(false)
	}

	def private internTestQuickFix(CharSequence input, Boolean simple) {
>>>>>>> 8492405ed... [#724] Fixed minor comments
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
		val issueCode = MODIFIER_DOES_NOT_MATCH_TYPENAME
		val fixlabel = "Add missing abstract modifier."
		val fixdescription = "Add the abstract modifier to match naming conventions for the type name. Delete final modifier if necessary."

<<<<<<< HEAD
		input.testQuickfixesOn(issueCode, new Quickfix(fixlabel, fixdescription, result.toString))
=======
<<<<<<< HEAD
		input.testQuickfixesOn(issueCode, new Quickfix(fixlabel, fixdescription, result.toString))
=======
		if (simple) {
			input.testQuickfixesOn(issueCode, new Quickfix(fixlabel, fixdescription, '''
				abstract class AbstractSample {
				}
			'''))
		} else {
			input.testQuickfixesOn(issueCode, new Quickfix(fixlabel, fixdescription, '''
				package abstract class AbstractSample {
				}
			'''))
		}
>>>>>>> 8492405ed... [#724] Fixed minor comments
>>>>>>> 64daf3d70... Rebase von Branch 'ep_issue397' auf '30dc686c5'
	}
}
